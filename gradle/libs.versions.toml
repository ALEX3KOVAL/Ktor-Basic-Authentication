[versions]
kotlin = "1.9.20"
ktor = "2.3.10"
reflections = "0.10.2"
kotlin-serialization-plugin = "1.8.21"
kotlinx-serialization = "1.5.1"

koin = "3.5.0"
logback = "1.4.14"
hikari = "5.0.1"
exposed = "0.42.0"

icu4j = "72.1"
reflect = "1.7.20"
postgres = "42.5.4"
junit = "5.9.3"
coroutines = "1.8.0"

kaml = "0.53.0"
xmlutil = "0.86.3"

xmlbeans = "5.1.1"

[libraries]
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "reflect" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

ktor-core = { module = "io.ktor:ktor-server-core-jvm" }
ktor-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-freemarker = { module = "io.ktor:ktor-server-freemarker-jvm", version.ref = "ktor" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-cio-jvm = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-condionalHeaders = { module = "io.ktor:ktor-server-conditional-headers-jvm", version.ref = "ktor" }
ktor-autoHeadResponse = { module = "io.ktor:ktor-server-auto-head-response-jvm", version.ref = "ktor" }
ktor-configYaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-status-pages = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktor-redirect = { module = "io.ktor:ktor-server-http-redirect-jvm", version.ref = "ktor" }
ktor-html = { module = "io.ktor:ktor-server-html-builder-jvm", version.ref = "ktor" }
ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
ktor-io = { module = "io.ktor:ktor-io", version.ref = "ktor" }

hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json-jvm = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm", version.ref = "kotlinx-serialization" }

xmlutil-core-jvm = { module = "io.github.pdvrieze.xmlutil:core-jvm", version.ref = "xmlutil" }
xmlutil-serialization = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlutil" }

kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
icu4j = { module = "com.ibm.icu:icu4j", version.ref = "icu4j" }

xmlbeans = { module = "org.apache.xmlbeans:xmlbeans", version.ref = "xmlbeans" }

reflections = { module = "org.reflections:reflections", version.ref = "reflections" }


# tests
test-ktor = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
test-junit-platform = { module = "org.junit:junit-bom", version.ref = "junit" }
test-junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
test-junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
test-junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
test-junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

[bundles]

ktor = [
    "ktor-core",
    "ktor-auth",
    "ktor-freemarker",
    "ktor-server-content-negotiation-jvm",
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-cio-jvm",
    "ktor-client-mock",
    "ktor-netty",
    "ktor-condionalHeaders",
    "ktor-autoHeadResponse",
    "ktor-configYaml",
    "ktor-status-pages",
    "ktor-redirect",
    "ktor-html",
    "ktor-http",
    "ktor-serialization",
    "ktor-serialization-kotlinx-json-jvm",
    "ktor-serialization-kotlinx-json",
    "ktor-utils",
    "ktor-io"
]

exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-json", "exposed-java-time"]
kotlinx-serialization = ["kotlinx-serialization-core", "kotlinx-serialization-json", "kotlinx-serialization-json-jvm"]
xmlutil = ["xmlutil-core-jvm", "xmlutil-serialization"]

[plugins]
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-serialization-plugin" }
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
